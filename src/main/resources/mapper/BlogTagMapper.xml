<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.lulucar.blog.mapper.BlogTagMapper">
    <resultMap id="BaseResultMap" type="cn.lulucar.blog.entity.BlogTag">
        <id column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="tag_name" jdbcType="VARCHAR" property="tagName"/>
        <result column="is_deleted" jdbcType="TINYINT" property="isDeleted"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>
    <resultMap id="BaseCountResultMap" type="cn.lulucar.blog.entity.BlogTagCount">
        <id column="tag_id" jdbcType="INTEGER" property="tagId"/>
        <result column="tag_count" jdbcType="INTEGER" property="tagCount"/>
        <result column="tag_name" jdbcType="VARCHAR" property="tagName"/>
    </resultMap>
    <sql id="Base_Column_List">
        tag_id, tag_name, is_deleted, create_time
    </sql>
    <insert id="insert" parameterType="cn.lulucar.blog.entity.BlogTag">
        insert into tb_blog_tag (tag_id, tag_name, is_deleted,
                                 create_time)
        values (#{tagId,jdbcType=INTEGER}, #{tagName,jdbcType=VARCHAR}, #{isDeleted,jdbcType=TINYINT},
                #{createTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" parameterType="cn.lulucar.blog.entity.BlogTag">
        insert into tb_blog_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="tagId != null">
                tag_id,
            </if>
            <if test="tagName != null">
                tag_name,
            </if>
            <if test="isDeleted != null">
                is_deleted,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="tagId != null">
                #{tagId,jdbcType=INTEGER},
            </if>
            <if test="tagName != null">
                #{tagName,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <insert id="batchInsertBlogTag" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="tagId">
        INSERT into tb_blog_tag(tag_name)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.tagName,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="cn.lulucar.blog.entity.BlogTag">
        update tb_blog_tag
        <set>
            <if test="tagName != null">
                tag_name = #{tagName,jdbcType=VARCHAR},
            </if>
            <if test="isDeleted != null">
                is_deleted = #{isDeleted,jdbcType=TINYINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where tag_id = #{tagId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.lulucar.blog.entity.BlogTag">
        UPDATE tb_blog_tag
        SET tag_id = #{tagId,jdbcType=INTEGER},
            is_deleted = #{isDeleted,jdbcType=TINYINT},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        WHERE tag_id = #{tagId,jdbcType=INTEGER}
    </update>

    <update id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        update tb_blog_tag set is_deleted = 1
        where tag_id = #{tagId,jdbcType=INTEGER}
    </update>
    <update id="deleteBatch" >
        update tb_blog_tag
        set is_deleted=1
        where tag_id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM tb_blog_tag
        WHERE tag_id = #{tagId,jdbcType=INTEGER} AND is_deleted = 0
    </select>
    <select id="selectByTagName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
        FROM tb_blog_tag
        WHERE tag_name = #{tagName,jdbcType=VARCHAR} AND is_deleted = 0
    </select>
    <select id="findTagList" parameterType="Map" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List"/>
            FROM tb_blog_tag
        WHERE is_deleted = 0
        ORDER BY tag_id DESC
        <if test="start != null and limit != null">
            LIMIT #{start},#{limit}
        </if>
    </select>
    <select id="getTagCount" resultMap="BaseCountResultMap">
        SELECT tag_top20_and_name.*, tag.tag_name
        FROM(
                SELECT tag_id, tag_count
                FROM(
                        SELECT tag_id, COUNT(*) AS tag_count
                        FROM (
                                 SELECT relation.tag_id
                                 FROM tb_blog_tag_relation relation
                                          LEFT JOIN tb_blog blog ON relation.blog_id = blog.blog_id
                                 WHERE blog.is_deleted = 0 OR blog.blog_id IS NULL
                             ) AS tag_ids
                        GROUP BY tag_id
                        ORDER BY tag_count DESC
                        LIMIT 20
                    ) AS tag_top20
            ) AS tag_top20_and_name
        LEFT JOIN tb_blog_tag tag ON tag_top20_and_name.tag_id = tag.tag_id
        WHERE tag.is_deleted = 0
    </select>
    <select id="getTotalTags" parameterType="Map" resultType="int">
        SELECT COUNT(*)
        FROM tb_blog_tag
        WHERE is_deleted = 0

    </select>
</mapper>